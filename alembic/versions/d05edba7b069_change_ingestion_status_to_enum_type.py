"""Change ingestion_status to enum type

Revision ID: d05edba7b069
Revises: 314e527774c9
Create Date: 2025-09-27 10:56:55.740518

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd05edba7b069'
down_revision: Union[str, Sequence[str], None] = '314e527774c9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    ingestion_status_enum = sa.Enum(
        'PENDING', 'UPLOADED', 'PROCESSING_PAGES', 'PROCESSING_CONTENT', 'COMPLETE', 'FAILED',
        name='ingestionstatus'
    )
    # Create the new type in the database.
    ingestion_status_enum.create(op.get_bind())

    # --- Step 2: Add the new column, but make it NULLABLE first ---
    # This allows us to add the column to a table that already has data.
    op.add_column('books', sa.Column('ingestion_status', ingestion_status_enum, nullable=True))

    # --- Step 3: Provide a default value for all existing rows ---
    # We'll set all existing books to the 'COMPLETE' status, which is a safe assumption.
    op.execute("UPDATE books SET ingestion_status = 'FAILED' WHERE ingestion_status IS NULL")

    # --- Step 4: Now that all rows have a value, alter the column to be NOT NULL ---
    op.alter_column('books', 'ingestion_status', nullable=False)

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('books', 'ingestion_status')
    # ### end Alembic commands ###
    sa.Enum(name='ingestionstatus').drop(op.get_bind())
